---
- name: Deploy flask app
  hosts: all
  become: yes
  vars:
    app_name: flask-app
    ansible_python_interpreter: /usr/bin/python3

  tasks:
   - name: Clean target repo
     file:
       path: "{{ TARGET_PATH }}"
       state: absent

   - name: Create target repo
     file:
       path: "{{ TARGET_PATH }}"
       state: directory

   - name: install prerequisites
     apt:
       name:
         - apt-transport-https
         - ca-certificates 
         - curl 
         - gnupg-agent
         - software-properties-common
   - name: add apt-key
     apt_key:
       url: https://download.docker.com/linux/ubuntu/gpg
   - name: add docker repo
       apt_repository:
         repo: deb https://download.docker.com/linux/ubuntu focal stable
   - name: install docker 
     apt:
       name: 
         - docker-ce
         - docker-ce-cli
         - containerd.io
       update_cache: yes
   - name: add userpermissions
      shell: "usermod -aG docker vagrant"
       
   - name: Pull Docker image
     community.docker.docker_image:
       name: "{{ DOCKER_IMAGE }}"
       source: pull

   - name: Stop and remove old container
     community.docker.docker_container:
       name: "{{ app_name }}"
       state: absent
     
   - name: Run new container
     community.docker.docker_container:
       name: "{{ app_name }}"
       image: "{{ DOCKER_IMAGE }}"
       state: started
       ports:
         - "4444:4444"

   - name: Create systemd service for Docker container
     copy:
       dest: "/etc/systemd/system/{{ app_name }}.service"
       content: |
         [Unit]
         Description={{ app_name }} Container
         After=docker.service
         Requires=docker.service

         [Service]
         Restart=always
         ExecStart=/usr/bin/docker run --rm --name {{ app_name }} -p 4444:4444 {{ DOCKER_IMAGE }}
         ExecStop=/usr/bin/docker stop {{ app_name }}

         [Install]
         WantedBy=multi-user.target

   - name: Reload systemd to recognize the new service
     command: systemctl daemon-reload

   - name: Ensure service is enabled
     systemd:
       name: "{{ app_name }}"
       enabled: yes
       state: started
     

